DO ZADANIA:


DO POWIELANIA:

1. Czy w pracy zawsze pisze wyjaśnienie definicji, np. funkcji (co się robi w tej funkcji, jakich argumentów się używa)
lub zmiennej (krótki opis zmiennej) + podświetlenie.

2. Zmienne globalne - definicja, jak się je definiuje, po co są i jak wykorzystuje się je w praktyce?

3. Czy macie poinstalowane jakieś wtyczki do samego terminala GIT bash? Jakie wtyczki mają do środowiska programistycznego? Czy używa ktoś wtyczek AI?

4. Biblioteki. Ciekawe, użyteczne metody. Czy mają jakieś metody, które często używają lub jakieś fajne które znaleźli?

5. Użytkowanie i pisanie kodu czy jakieś fajne rzeczy/nawyki/schematy/czynności?

6. Ogólna rozmowa o pracy, przeglądanie projektów z pracy. Jakie projekty na własny użytek lub Open Source pisali na początku lub piszą teraz?

7. Konsultacje z zadań. Omawianie już zaliczonych zadań (z tymi co zaliczyli). Omawianie jak coś można napisać? Jak nie wiem jak i co to pytanie.
No i omawianie czy to napisane jest git i czy można lepiej, ładniej, lepiej użytkowo, czyściej, poprzez inną metodę, sposób, itp.?

ODPOWIEDZIANE:

9. Jak się strukturyzuje np. większe pętle - kilku poziomowe instrukcje, większe słowniki, itp.? Czy jeden pod drugim, kiedy jeden pod drugim?

13. API a Web scraping - czy to się ze sobą wiąże? Jak? Czy to coś innego?

17. Czy te metody 3 magiczne omawiane działają tylko do słowników?

10. Instrukcja switch? Przykład w zadaniu 5.

12. json

15. Jak na GitHubie przypisać repozytorium kogoś innego do swojej kolekcji (tak jak zrobiłem to na GitLabie)?

16. Metoda różni się od funkcji tym, że jest przypisana do jakiejś klasy?

17. Jak wygląda to w pracy, ile commitów się robi? Co wtedy, gdy np. zrobi się commit i np. jakieś dwie małe poprawki
trzeba nanieść. Czy commituje się to, czy komentuje się to? Ile kodu się pisze w pracy?

18. Pytanie w zwiazku z wirtualnym środowiskiem, czy zawsze kiedy odpala się program musi być aktywne środowisko, czyli
zawsze trzeba je aktywować w konsoli? Nie wystarczy, że interpreter jest powiazany z projektem?

11. API - rozszerzenie tematu

19. Czy jak kończa pracę a nie ukończyli żadnej funkcjonalności, itp. to czy robią commit?

20. Często się korzysta z plików .csv w pracy?

21. Jaka to wtyczka co podpowada - wypełnia?

22. Na później -- > try, except, raise  -  rozszerzyć temat

23. Pytania do zadania L3
# TODO Czy w liniach 3-13 należało by zrobić wyjątek Raise dla wartości mniejszych od 0?
# TODO Czy Raise stosuje się dla takich właśnie sytuacji?
# Czy powyżej lepiej zrobić z break czy ze zmienną pomocniczą jak w pliku try_except.py?

14. Ktoś może interesuje się tematem tworzenia gier?

24. Czy za każdym razem jak zaczyna dzień pracy nad jakimś projektem (ogólnie jak uruchamia się jakiś projekt) to czy
zawsze trzeba aktywować wirtualne środowisko?

25. json: load a loads
data = json.load(file)
a
data = json.loads(file.read())
Czy można używać zamiennie? Czego się używa? Czym się różnią?

26. Rozszerzyć środowiska i rozmieszczenie katalogowanie projektów w Pycharm i GitHub
